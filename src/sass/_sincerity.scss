@use "./consts" as c;
@use "./functions" as f;
@use "./mixins" as m;

.sincerity {
  display: flex;

  @include m.mq(PC) {
    display: flex;
    padding-left: f.cPxToStdVp(40, map-get(c.$BREAKPOINTS, "PC"));
    padding-right: f.cPxToStdVp(40, map-get(c.$BREAKPOINTS, "PC"));
    position: initial;
  }

  &__image {
    width: f.cPxToStdVp(224);
    height: f.cPxToStdVp(576);
    position: relative;

    @include m.mq(PC) {
      width: f.cPxToStdVp(416, map-get(c.$BREAKPOINTS, "PC"));
      height: f.cPxToStdVp(576, map-get(c.$BREAKPOINTS, "PC"));
    }

    &::before {
      content: "";
      display: block;
      background-color: rgba(255, 235, 0, 0.32);
      width: 100%;
      position: absolute;
      inset: f.cPxToStdVp(-16) auto f.cPxToStdVp(-16) f.cPxToStdVp(16);
      z-index: -1;

      @include m.mq(PC) {
        inset: f.cPxToStdVp(-16, map-get(c.$BREAKPOINTS, "PC")) auto
          f.cPxToStdVp(-16, map-get(c.$BREAKPOINTS, "PC"))
          f.cPxToStdVp(16, map-get(c.$BREAKPOINTS, "PC"));
      }
    }

    &::after {
      content: "";
      display: block;
      background-color: rgba(1, 117, 194, 0.24);
      width: 100%;
      position: absolute;
      inset: f.cPxToStdVp(-32) auto f.cPxToStdVp(-32) f.cPxToStdVp(32);
      z-index: -1;

      @include m.mq(PC) {
        inset: f.cPxToStdVp(-32, map-get(c.$BREAKPOINTS, "PC")) auto
          f.cPxToStdVp(-32, map-get(c.$BREAKPOINTS, "PC"))
          f.cPxToStdVp(32, map-get(c.$BREAKPOINTS, "PC"));
      }
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  &__textBox {
    // position: absolute;
    // top: 0;
    // left: f.cPxToStdVp(200);
    height: 100%;

    @include m.mq(PC) {
      flex-grow: 1;
      position: relative;
      top: initial;
      right: initial;
    }
  }

  &__text {
    font-size: f.cPxToStdVp(64);
    font-weight: c.$FW-BLACK;
    writing-mode: vertical-rl;
    // white-space: nowrap;
    overflow: hidden;
    margin-top: -1em;
    // height: 100%;

    @include m.mq(PC) {
      font-size: f.cPxToStdVp(64, map-get(c.$BREAKPOINTS, "PC"));
      line-height: 1.2;
      white-space: initial;
      margin-top: initial;
      position: absolute;
      top: 50%;
      left: 50%;
      right: initial;
      transform: translate(-50%, -50%);
      height: 100%;
    }

    span:nth-of-type(1) {
      display: inline-block;
      margin-top: 2em;

      @include m.mq(PC) {
        margin-top: 3em;
      }
    }

    span:nth-of-type(2) {
      @include m.mq(PC) {
        display: inline-block;
        margin-top: 4em;
      }
    }
  }
}
